[{"url":"cheatsheets/","title":"Cheatsheets","tags":["welcome"],"text":"Cheatsheets Getting Started with Julia - live . Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group Plots.jl cheatsheet"},{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"installation/","title":"Software installation","tags":["welcome"],"text":"First-time setup: Install Julia & Pluto Text and pictures version: Step 1: Install Julia  1.8.2 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.8.2 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.8.2 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto , the notebook environment that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: \njulia> ]\n\n(@v 1.8 ) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: \n(@v 1.8 ) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  Featured Notebooks . These notebooks are useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fons\\Documents\\18S191_assignments\\  on Windows /Users/fons/Documents/18S191_assignments/  on MacOS /home/fons/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\n    console.log(el)\n    el.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"logistics/","title":"Class logistics","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Course logistics Describe here the logistics of your class."},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"assets/scripts/get_highlights/","title":"get_highlights","tags":[],"text":"if isempty get metadata \"homepage\" , \"highlights\", nothing else highlights htl \"\"\" section div class \"content\" h2 x \"name\" h2 p x \"text\" p div div class \"preview\" img src \" x \"img\" \" div section \"\"\" for x in metadata \"homepage\" \"highlights\" htl \"\"\" div class \"subjectscontainer wide\" h1 Highlights h1 div class \"contain\" highlights div div \"\"\" end"},{"url":"assets/scripts/get_subjects/","title":"get_subjects","tags":[],"text":"let sections metadata \"sidebar\" sections htl \"\"\" let input other page.input output other page.output name get output.frontmatter, \"title\", basename input.relative path desc get output.frontmatter, \"description\", nothing tags get output.frontmatter, \"tags\", String image get output.frontmatter, \"image\", nothing class \"no decoration\", \"tag replace x, \" \" \" \" \" for x in tags ..., image nothing || isempty image ? nothing htl \"\"\" a title desc class class href root url \" \" other page.url h3 name h3 img src image a \"\"\" end for other page in collections section id .pages \"\"\" for section id, section name in sections isempty sections ? nothing htl \"\"\" div class \"wide subjectscontainer\" h1 Subjects h1 div class \"subjects\" sections div div \"\"\" end"},{"url":"ch04_Radiation/ch02_bowen_ratio/","title":"ch02_bowen_ratio","tags":[],"text":" A Pluto.jl notebook v0.19.32 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Pkg Pkg.activate \".\" using HydroTools using HydroTools Cp, ϵ using Plots using Ipaper using PlutoUI gr framestyle box nothing function cal gamma Tair, Pa atm lambda cal lambda Tair Cp Pa ϵ lambda u\"kPa K\" end function cal bowen Tair, Pa atm Δ cal slope Tair γ cal gamma Tair, Pa γ Δ end Pkg.add \"PlutoUI\" end html\"\"\" style main max width 1100px align self flex start margin left 50px \"\"\" md\"\"\" Ta bind Ta Slider 40 1.0 50 default 25, show value true ℃ \"\"\" cal lambda Ta MJ kg begin T 40 0.1 40 es cal es. Ta nothing end begin function draw plot fun cal slope, title \"Δ of es\", unit \"kPa ℃\" p2 plot T, fun. T title, xlabel \"Tair ℃ \", ylabel unit, label nothing scatter Ta , fun Ta , label nothing vline Ta , linestyle dash, color grey, label nothing hline fun Ta , linestyle dash, color grey, label nothing label2 sprintf \" %.2f ℃, %.3f %s \", Ta, fun Ta , unit annotate Ta, fun Ta , text label2, red, right, bottom, 12 p2 end end begin p es draw plot fun cal es, title \"es\", unit \"kPa\" p slope draw plot fun cal slope, title \"Δ\", unit \"kPa ℃\" p gamma draw plot fun cal gamma, title \"γ\", unit \"kPa ℃\" p bowen draw plot fun cal bowen, title \"bowen γ Δ\", unit \"\" plot p es, p slope, p gamma, p bowen, size 800,700 end "},{"url":"ch04_Radiation/ch4_radiation/","title":"ch4_radiation","tags":[],"text":" A Pluto.jl notebook v0.19.32 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end time begin using Pkg Pkg.activate \".. .. pluto deployment environment\" Pkg.add \"PlutoUI\" using PlutoUI using Plots using Dates global functions deg2rad x x 180 pi rad2deg x x pi 180 function get md J date origin DateTime 2010, 1, 1, 0, 0, 0 Day J 1 Dates.format date origin, \"mm dd\" end function ssh2time ssh w hour ssh 2 w sec floor Int, w hour 3600 time begin DateTime 2000, 1, 1, 12, 0, 0 Dates.Second w sec time end DateTime 2000, 1, 1, 12, 0, 0 Dates.Second w sec time begin, time end time begin, time end Dates.format time begin, \"HH MM SS\" , Dates.format time end, \"HH MM SS\" time begin, time end end Solar Declination Angle （黄赤交角） function get σ J to deg false σ 0.409 . sin. 2 pi 365 J . 1.39 in rad if to deg σ rad2deg. σ end σ end end md\"\"\" 黄赤交角 σ 纬度 ϕ 时角 ω \"\"\" t 12 12 夜间0 12 ，第二天夜间为24 12 t collect 0 24 t2 t . 12 t2 . 15 ω deg2rad t2 . 15 length ω deg2rad t2 . 15 sinh sin ϕ sin σ . cos ϕ cos σ cos. ω plot sinh hline 0 , color \"black\" md\"\"\" doy bind J Slider 1 365 default 319, show value true lat bind lat Slider 90 0.1 90, default 30.5, show value true \"\"\" begin d r reverse relative Earth Sun distance I₀ ρ₀² function relativeDist J 1 . 0.033 . cos. 2 pi 365 J end plot relativeDist 1 365 , title \"doy J\", label \"\", framestyle box, ylab \"I₀ ρ₀²\", xlab \"Doy of Year DOY \" scatter J , relativeDist J , markersize 6, label \"\" end plot collect 1 J plot x begin plot get σ 1 365 to deg true , title \"doy J\", label \"\", framestyle box, ylab \"Solar Declination Angle\" scatter J , get σ J to deg true , markersize 6, label \"\" p angle SolarDecimation 1 10 end begin 太阳高度角sinh ω collect 2 pi 0.02 2 pi ϕ deg lat ϕ deg2rad ϕ deg ϕ 获取日出时间和日落时间，即sinh 0 function get ssh ϕ, J σ get σ. J rad2deg σ tmp tan. ϕ . tan. σ clamp tmp, 1, 1 constrain in the range of 1, 1 w acos. tmp w hour w pi 12 距离中午的时间 ssh w hour 2 end doy 1 365 time sunrise ssh2time get ssh ϕ, J 1 title \"Sunshine Duration lat ϕ deg, doy J, Year Month get md J , sunrise and sunset time sunrise\" plot doy, get ssh ϕ, doy , title title, label \"\" scatter J , get ssh ϕ, J , label \"\" get ssh ϕ, J end get σ J | rad2deg "},{"url":"climate_science/our_first_climate_model/","title":"Our first climate model","tags":["lecture","module3","climate","modeling","track_climate","track_math","plotting","data","ODE","differential equation","CSV","dataframe","track_data"],"text":" A Pluto.jl notebook v0.19.25 frontmatter chapter 3 video \"https www.youtube.com watch?v J1UsMa1cTeE\" image \"https user images.githubusercontent.com 6933510 136199705 7bdb6bb0 8698 43a1 87e6 c073ab102da5.png\" section 4 order 4 title \"Our first climate model\" layout \"layout.jlhtml\" youtube id \"J1UsMa1cTeE\" description \"\" tags \"lecture\", \"module3\", \"climate\", \"modeling\", \"track climate\", \"track math\", \"plotting\", \"data\", \"ODE\", \"differential equation\", \"CSV\", \"dataframe\", \"track data\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using DifferentialEquations using Plots, PlutoUI using LinearAlgebra using CSV, DataFrames end TableOfContents title \"📚 Table of Contents\", indent true, depth 4, aside true md\"\"\" This lecture is based on the fall 2020 \"Introduction to Climate Modeling\" lecture by Henri Drake. Henri's video https computationalthinking.mit.edu Fall20 lecture20 , Henri's original notebook https github.com mitmath 18S191 blob Fall20 lecture notebooks week11 01 energy balance model.jl where he describes the Energy Balance Model. \"\"\" md\"\"\" Pre Computational Thinking traditional ode \"analytic\" solutions \"\"\" md\"\"\" Notation ``y y t `` is a function of time t Inititally t 0 , y 0 y 0 We write ``y'`` for ``dy dt``. \"\"\" md\"\"\" ``y' `` constant ``y' a`` html\" br \" Solution ``y t at y 0`` \"\"\" md\"\"\" ``y' `` linear in y ``y' a by`` html\" br \" Solution ``y t \\frac a b e^ bt 1 y 0 e^ bt `` Comment Equilibrium obtained if b\\ne0 by solving y' 0 for y giving equilibrium y a b . Also can be obtained by letting t\\rightarrow \\infty in the solution killing the exponential terms. \"\"\" md\"\"\" ``y' `` linear in y \"forcing term\" in t ``y' a by f t `` html\" br \" Solution ``y t e^ bt \\left y 0 \\int 0^t e^ bu a f u du \\right `` \"\"\" md\"\"\" Computational Thinking \"\"\" md\"\"\" Review Solving an ODE y' f y in Julia 0. Define f y,p,t 1. ODEProblem f, f 0 , time span, parameters 2. solve 3. plot etc \"\"\" f y, a, b, forcing c ,t a b y forcing c t forcing c t c t md\"\"\" a bind a Slider 0 .01 10, show value true, default 0 b bind b Slider 0 .1 5, show value true, default 0 y₀ bind y₀ Slider 5 .1 15, show value true, default 2.0 c bind c Slider 0 .1 5, show value true, default 0.0 \"\"\" sol solve ODEProblem f, y₀, 0, 10.0 , a, b, forcing c y₀ begin p plot sol , legend false, background color inside black , ylims 0, 10 , lw 3, c red plot direction field xs Float64 ys Float64 lrx LinRange xlims p ..., 30 for x in lrx for y in LinRange ylims p ..., 30 v 1, a b y forcing c x v . 20 lrx 2 lrx 1 plot x, x v 1 , y, y v 2 , alpha 0.5, c gray push xs, x v 1 , x v 1 , NaN push ys, y v 2 , y v 2 , NaN end end hline b 0 ? 0 a b ,c white,ls dash plot xs, ys, alpha 0.7, c yellow ylabel \"y\" annotate .5,y₀,text \"y₀\",color red title \"Solution to y' t a by forcing c t \" end md\"\"\" Background climate physics The simplest climate model can be conceptualized as ```math \\begin align \\text \\color brown change in heat content & \\text \\color orange absorbed solar radiation energy from the Sun's rays \\newline & \\text \\color blue outgoing thermal radiation i.e. blackbody cooling to space \\newline & \\text \\color grey human caused greenhouse effect trapped outgoing radiation \\end align ``` where each of these is interpreted as an average over the entire globe hence \"zero dimensional\" . \"\"\" html\"\"\" img src \"https raw.githubusercontent.com hdrake hdrake.github.io master figures planetary energy balance.png\" height 225 \"\"\" md\"\"\" 1.1 Incoming 🌞 Absorbed solar radiation an example of \\mathrm temp ' constant \"\"\" md\"\"\" Heating the earth nonstop \"\"\" md\"\"\" At Earth's orbital distance from the Sun, the power of the Sun's rays that intercept the Earth is equal to \"\"\" S 1368 solar insolation W m^2 energy per unit time per unit area md\"A small fraction\" α 0.3 albedo, or planetary reflectivity unitless md\"\"\" In math we just write down a differential equation, but in the physical world there are physical variables to identify. In our baking the earth example, we will identify the following quantities Industrial Revolution Start 1850 Avg Temperature in 1850 14.0 °C Solar Insolation S 1368 W m^2 energy from the sun Albedo or plentary reflectivity α 0.3 atmosphere and upper ocean heat capacity C 51 J m^2 °C Earth Baking Formula html\" br \" `` C\\ \\mathrm temp ' t S 1 α 4 `` round S 1 α 4 sigdigits 4 \"\"\" md\"\"\" of this incoming solar radiation is reflected back out to space by reflective surfaces like white clouds, snow, and ice , with the remaining fraction 1 \\alpha being absorbed. Since the incoming solar rays are all approximately parallel this far from the Sun, the cross sectional area of the Earth that intercepts them is just a disc of area \\pi R^ 2 . Since all of the other terms we will consider act on the entire surface area 4\\pi R^ 2 of the spherical Earth, the absorbed solar radiation per unit surface area averaged over the entire globe is reduced by a factor of 4. https www.open.edu openlearn ocw pluginfile.php 101161 mod oucontent oucontent 890 639dcd57 ce3f1c3a s250 3 002i.jpg The absorbed solar radiation per unit area is thus \\textcolor orange \\text absorbed solar radiation \\equiv \\frac S 1 \\alpha 4 \"\"\" absorbed solar radiation S 1 α 4 W m^2 begin C 51. atmosphere and upper ocean heat capacity Wyr m^2 °C temp₀ 14.0 preindustrial temperature °C end p1 ODEProblem temp, p, t 1 C absorbed solar radiation, temp₀, 0.0, 170 begin plot solve p1 , legend false, background color inside black, xlabel \"years from 1850 \", ylabel \"Temperature °C\" hline temp₀,temp₀ ,c white,ls dash annotate 80, 25 temp₀, text \"Preindustrial Temperature temp₀ °C\",color white title \"Absorbing Solar Radiation only \" end md\"\"\"The heat content C temp is determined by the temperature temp in Kelvin and the heat capacity of the climate system. While we are interested in the temperature of the atmosphere, which has a very small heat capacity, its heat is closely coupled with that of the upper ocean, which has a much larger heat capacity of \"\"\" md\"\"\" The change in heat content over time is thus simply given by \\frac d CT dt . Since the heat capacity of sea water hardly changes with temperature, we can rewrite this in terms of the change in temperature with time as \\color brown \\text change in heat content \\ C \\frac dtemp dt \"\"\" md\"\"\" 1.2 Outgoing ♨ thermal radiation \"\"\" md\"\"\" The outgoing thermal radiation term \\mathcal G T or \"blackbody cooling to space\" represents the combined effects of negative feedbacks that dampen warming , such as blackbody radiation , and positive feedbacks that amplify warming , such as the water vapor feedback . Since these physics are too complicated to deal with here, we linearize the model combining the incoming and the outgoing. We assume that the preindustrial world was in energy balance, and thus the equilibrium temperature is the preindustrial temperature. Thus we assume temp' t B temp 0 temp t for some value of B . The minus sign in front of temp t indicating it restores equilibrium. \"\"\" md\"\"\" The value that has been chosen is \"\"\" B 1.3 climate feedback parameter W m^2 °C , md\"\"\" start\\ temp bind start temp Slider 0 28 show value true, default 14 \"\"\" p2 ODEProblem temp, p, t 1 C B temp₀ temp , start temp, 0.0, 170 begin plot solve p2 , legend false, background color inside black, xlabel \"years from start\", ylabel \"Temperature °C\", ylim 0, 30 hline temp₀,temp₀ ,c white,ls dash annotate 80, temp₀, text \"Preindustrial Temperature temp₀ °C\", bottom,color white title \"Energy Balance Model Healthy Earth \" end md\"\"\" 1.3 Greenhouse 🏭 Human caused greenhouse effect Empirically, the greenhouse effect is known to be a logarithmic function of gaseous carbon dioxide CO₂ concentrations \\color grey \\text human caused greenhouse effect \\ \\mbox forcing\\ coef \\ln \\left \\frac \\text CO ₂ \\text CO ₂ \\text PreIndust \\right , How this depends on time into the future depends on human behavior Time is not modelled in the above equation. \"\"\" md\"where\" forcing coef 5.0 CO2 forcing coefficient W m^2 CO₂ PreIndust 280. preindustrial CO2 concentration parts per million ppm greenhouse effect CO₂ forcing coef log CO₂ CO₂ PreIndust begin CO2 present 420. CO2 range 280 2 .^ range 1, stop 3,length 100 plot CO2 range, greenhouse effect. CO2 range , lw 2.5, label nothing, color black plot CO₂ PreIndust , greenhouse effect CO₂ PreIndust , marker circle, ms 6, linecolor white, color blue, lw 0, label \"pre industrial PI \" plot CO2 present , greenhouse effect CO2 present , marker circle, ms 6, color red, linecolor white, lw 0, label \"present day 2020 \" plot xticks 280, 280 2, 280 4, 280 8 , legend bottomright, size 400, 250 plot ylabel \"Radiative forcing W m² \", xlabel \"CO₂ concentration ppm \" end begin CO₂ t CO₂ PreIndust no emissions CO₂ t CO₂ PreIndust 1.01^t test model CO₂ t CO₂ PreIndust 1 t 220 ^3 end greenhouse effect CO₂ 15 p3 ODEProblem temp, p, t 1 C B temp₀ temp greenhouse effect CO₂ t , start temp, 0.0, 170 begin plot solve p3 , legend false, background color inside black, xlabel \"years from 1850\", ylabel \"Temperature °C\", ylim 10, 20 hline temp₀,temp₀ ,c white,ls dash annotate 80, temp₀, text \"Preindustrial Temperature temp₀ °C\", bottom,color white title \"Model with CO₂\" end begin years 1850 2030 plot years, CO₂. years. 1850 , lw 3, legend false xlabel \"year\" ylabel \"CO₂ ppm \" end md\"\"\" Observations from Mauna Loa Volcano Mauna Loa Volcano https i.pinimg.com originals df 1a e7 df1ae72cfd5e6d0d535c0ec99e708f6f.jpg information is available at https www.ncei.noaa.gov pub data paleo icecore antarctica law law2006.txt https www.ncei.noaa.gov pub data paleo icecore antarctica law law2006.txt . \"\"\" CO2 historical data url \"https gml.noaa.gov webdata ccgg trends co2 co2 mm mlo.csv\" CO2 historical path download CO2 historical data url begin offset findfirst startswith \" \" , readlines CO2 historical path CO2 historical data raw CSV.read CO2 historical path, DataFrame header offset, skipto offset 1, first CO2 historical data raw, 11 end md\"\"\" Data is in the column `\"average\"`. \"\"\" md\"\"\" Oh no, missing data 99.99 \"\"\" validrowsmask CO2 historical data raw , \"average\" . 0 CO2 historical data CO2 historical data raw validrowsmask, begin plot CO2 historical data , \"decimal date\" , CO2 historical data , \"average\" , label \"Mauna Loa CO₂ data Keeling curve \" plot years, CO₂. years. 1850 , lw 3 , label \"Cubic Fit\", legend topleft title \"CO₂ observations and fit\" end md\"\"\" We will use this fit to compare against historical temperatures. \"\"\" md\"\"\" Climate feedback BB bind BB Slider 0 .1 4, show value true, default B Ocean Heat Capacity CC bind CC Slider 10 .1 200, show value true, default C \"\"\" p4 ODEProblem temp, p, t 1 CC BB temp₀ temp greenhouse effect CO₂ t , start temp, 0.0, 170 md\"\"\" Best and worst case projections of future global warming \"\"\" md\"\"\"Consider two divergent hypothetical futures 1. a low emissions world in which emissions decrease such that CO2 concentrations stay below 500 ppm by 2100 known in climate circles as \"RCP2.6\" and 2. a high emissions world in which emissions continue increasing and CO2 concentrations soar upwards of 1200 ppm \"RCP8.5\" . \"\"\" md\"\"\" https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week12 predictthefuture.svg \"\"\" md\"\"\" In the low emissions scenario, the temperature increase stays below ΔT 2 °C by 2100, while in the high emissions scenario temperatures soar upwards of 3.5ºC above pre industrial levels. \"\"\" md\"Although the greenhouse effect due to human caused CO₂ emissions is the dominant forcing behind historical and future projected warming, modern climate modelling considers a fairly exhaustive list of other forcing factors aerosols, other greenhouse gases, ozone, land use changes, etc. . The video below shows a breakdown of these forcing factors in a state of the art climate model simulation of the historical period.\" html\"\"\" script src \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.js\" integrity \"sha256 wwYlfEzWnCf2nFlIQptfFKdUmBeH5d3G7C2352FdpWE \" crossorigin \"anonymous\" defer script link rel \"stylesheet\" href \"https cdn.jsdelivr.net npm lite youtube embed 0.2.0 src lite yt embed.css\" integrity \"sha256 99PgDZnzzjO63EyMRZfwIIA i OS2wDx6k 9Eo7JDKo \" crossorigin \"anonymous\" lite youtube videoid E7kMr2OYKSU params \"modestbranding 1&rel 0\" lite youtube \"\"\" solp4 solve p4 begin T url \"https data.giss.nasa.gov gistemp graphs graph data Global Mean Estimates based on Land and Ocean Data graph.txt\" T df CSV.read download T url ,DataFrame, header false, skipto 6,delim \" \" T df T df , 1,6 end begin plot years,solp4. years. 1850 ,lw 2,label \"Predicted Temperature from model\", legend topleft xlabel \"year\" ylabel \"Temp °C\" plot parse. Float64, T df ,1 , parse. Float64, T df ,2 . 14.15, color black, label \"NASA Observations\", legend topleft end "},{"url":"homework/hw1/","title":"sample homework","tags":["module2","track_julia","track_material","homeworks","pluto","PlutoTeachingTools"],"text":" A Pluto.jl notebook v0.19.25 frontmatter homework number \"1\" order \"2.5\" title \"sample homework\" tags \"module2\", \"track julia\", \"track material\", \"homeworks\", \"pluto\", \"PlutoTeachingTools\" layout \"layout.jlhtml\" description \"sample howework\" using Markdown using InteractiveUtils using PlutoTeachingTools, PlutoUI md\"\"\" Sample Homework This notebook showcases some of the features of `PlutoTeachingTools.jl` https github.com JuliaPluto PlutoTeachingTools.jl and how to use these to write homework assignment in Pluto. \"\"\" tip md\"\"\"For a deeper tour of `PlutoTeachingTools.jl`, check their documentation https juliapluto.github.io PlutoTeachingTools.jl example.html \"\"\" md\"\"\" Useful functionalities `PlutoTeachingTools.jl` has some functions like `correct`, `still missing`, here a few demoes \"\"\" correct still missing keep working keep working md\"you can also give custom text to the boxes\" hint md\"this is a hint, hover the box to unblur the text\" md\"\"\" Exercise 1 a simple exercise Replace missing with the value `1`. \"\"\" x missing if ismissing x still missing elseif x 1 && x isa Int correct elseif x 1 && x isa Int b1 almost md\"\"\"Your variable has the right value, but it's not quite the right answer. Read carefully the instructions\"\"\" b2 hint md\"\"\"What type should the value of x be?\"\"\" md\"\"\" b1 b2 \"\"\" else keep working md\"\"\"That is not the right answer Keep trying \"\"\" end md\"\"\" here is a short demo of how it looks like when the student tries to solve the exercise \"\"\" Resource \"https user images.githubusercontent.com 49938764 249749643 8cc12de3 2b50 4182 b95d 686c2c18332c.mov\", width 500, autoplay \"\", loop \"\" md\"\"\" Exercise 2 Write a function called `myfun` that takes as input an integer and returns its square. Define a variable called `y` and assign `myfun 3 ` to it. \"\"\" let if isdefined myfun func not defined myfun else test values 1, 2, 3, 4, 5 msg1 correct for t in test values if myfun t t^2 msg1 keep working md\"Test failed for input t, expected t^2 , but got myfun t \" break end end msg1 end end if isdefined y var not defined y elseif y 9 correct else keep working md\"Evaluated expression y y is incorrect.\" end md\"\"\" and here is a quick demo of the exercise in action \"\"\" Resource \"https user images.githubusercontent.com 49938764 249748007 d0b2d773 6b21 49d4 89db ad737af510fe.mov\", width 500, autoplay \"\", loop \"\" "},{"url":"mod1_setup_website/basic_info/","title":"Fill course basic information","tags":["module1","track_setup","teaching","metadata"],"text":"Add basic information If you look at the homepage of the template website, you will see it has a bunch of placeholder text, such as “name of your course”, “a short catchy phrase” etc. To customize this, you will need to customize the  metadata  of the website. That is, add basic info for your class. To do so, you will need to fill the info in the files under the folder  src/_data . Let us analyze these one by one. course_info.jl This file contains a julia  Dict  with the basic info of the class. For each key ( course_name ,  course_subtitle , etc.) replace the corresponding placeholder with an appropriate text for your class. When filling the  institution_logo  data with the name of your university logo file, do not forget to actually put the file under  src/assets . Authors are listed as a vector of pairs, where the first element is the author name and the second is their homepage address. If you dont have a homepage address for the author, put an empty string  \"\" . homepage.jl This file contains metadata for the info displayed in the homepage, particularly title : the title displayed on top of the homepage disclaimer : the disclaimer displayed below the title. If you don’t want a disclaimer, you can remove this entry. highlights : in this entry you can specify the highlights of your class, which will be displayed on the homepage. This entry should be a vector of highlights. Each entry in the vector should be a dict with the following fields\n name : the title of the highlight text : short description of the highlight img : link to an image summarizing the highlight sidebar.jl In this file you can specify the sidebar of the website. All lecture materials will be grouped in  modules  in the sidebar, which are defined in this file. The modules in the file are specified as a vector of pairs, in the form module_id => module_title\n for example \"module1\" => \"Week 1: Introduction to the class\"\n To link a file to a module, you will need to add the module identifier in the page tags. For more info about this, see  Add frontmatter tracks.jl In this file you will specify tracks. Tracks can be used to group lectures across modules, e.g. if they have a commmon theme. When a track is selected on the sidebar, only the pages\nbelonging to that track will be highlighted. Similar to modules, tracks are stored in a vector of pairs in the form track_id => track_title\n for example \"julia\" => \"💻 Julia programming\"\n To link a file to a track, you will need to add the track id, prefixed with  track_ , to the tags of the page. For example, to add a lesson to the julia track defined above, you would add the tag  track_julia  to the tags of that lesson file. License Choosing an appropriate license is important to make your material properly reusable. For text, popular licenses are  Creative Commons , for example  CC BY-SA 4.0 For code, an  OSI open source license  is recommended. For example  MIT  or  Apache 2.0  license. To add the license, open the file  LICENSE.md  and replace the text <insert license for your material judge>\n with your license(s)."},{"url":"mod1_setup_website/getting_started/","title":"Getting started","tags":["module1","track_setup","teaching","repository structure"],"text":"Fork the template Go to the  template repository  and click  Use this template  on the top-right corner. This will fork the repository under your github profile. Folder structure Let us have a look at what this repository looks like. The most important folder, where you will be mainly working is  src . Here you will place all your lecture materials. So let us take a closer look at this. Opening the  src  folder, you will see the following _data  folder: here you will place metadata about your website (university name, class semester, define tracks, etc.), more on this in the next lesson. _include : This folder contains the layout templates that are used to generate the final pages on your website. Unless you want to tweak the layout, you will not need to modify this. assets : in this folder you can place all attachements, such as your university logo and other pictures. The folder also contains the CSS and scripts used to render the website. That was for the “infrastructure part” of the website, the rest is content! To add new pages to your website, simply them under the  src  folder. You can group them in subfolders, as done in this template, but that is not a strict requirement. When downloading this template, you will get the following material: installation.md : this page contains instructions on how to install Julia and Pluto. If you find it useful, you may keep it as is, or edit to match your wanted installation instructions. cheatsheets.md : contains a list of julia related resources. Again, you can keep it or remove it. logistics.md : empty markdown page, where you can describe the logistics of your class index.jlmd : this is used to render the homepage.  Do not remove or modify this! search.md : this is used to render the search tab on the sidebar, do not modify or remove this file. The remaining folders mod1_setup_website mod2_add_material mod3_publish_website homework are placeholder samples, used to showcase what a deployed website looks like. As a bonus, these placeholder files actually document how to use this template.  You can read it and see what the final result looks like on the  template webpage . When starting adding your course material, you will most likely want to remove these."},{"url":"mod1_setup_website/working_locally/","title":"Working locally","tags":["module1","track_setup","track_julia","PlutoSliderServer","pluto"],"text":"Working locally Open this repository in VS Code, and install the recommended extensions. To start running the development server, open the VS Code  command palette  (press  Cmd+Shift+P ), and search for  Tasks: Run Task , then  PlutoPages: run development server . The first run can take some time, as it builds up the notebook outputs cache. Leave it running. This will start two things in parallel: the PlutoPages.jl notebook (which generates the website), and a static file server (with Deno_jll). It will open two tabs in your browser: one is the generation dashboard (PlutoPages), the other is the current site preview (Deno_jll). Whenever you edit a file, PlutoPages will automatically regenerate! Refresh your browser tab. If it does not pick up the change, go to the generation dashboard and click the “Read input files again” button. Note! : This workflow is recommended for writing static content, styles, and for site maintenance. But for writing Pluto notebooks, it’s best to prepare the notebook first, and then run the site (because it re-runs the entire notebook on any change)."},{"url":"mod3_publish_website/deploy_static/","title":"Deploy your website as static","tags":["module3","track_setup","deploy","netlify","github actions","github pages"],"text":"Deploying with github pages Deploying your website as static page with github pages is a breeze. Whenever you push to main, the website will be deployed to a branch called  gh-pages . All you need to do is go to your repository and from  Settings > Pages  choose to deploy from  gh-pages  branch, as the following picture shows. After that, the website will be available at https://yourusername.github.io/your-repository-name\n Note that this is a  static  webpage, so sliders will not work. Students will still be able to play with interactivity by downloading the notebook or running it on binder. If you want interactivity to work on the webpage, you can either Precompute the notebooks outputs  (experimental) or Run your own server"},{"url":"mod3_publish_website/precompute_output/","title":"Precompute the pluto notebooks","tags":["module3","track_setup","track_julia","deploy","precompute","Pluto","PlutoSliderServer"],"text":"COMING SOON"},{"url":"mod3_publish_website/setup_server/","title":"Setup a server for your website","tags":["module3","track_setup","deploy","server","dynamic","droplet"],"text":"COMING SOON"}]